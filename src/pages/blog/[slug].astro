---
import { getCollection, CollectionEntry } from 'astro:content';

import BlogLayout from '../../layouts/BlogLayout.astro';

import { formatBlogPosts } from '../../utils/helpers';

// export async function getStaticPaths({ params }: any) {
//   const allPosts = await getCollection('blog');
//   const formattedPosts = formatBlogPosts(allPosts);

//   const post = formattedPosts.find(
//     (post: { data: { slug: any } }) => post.data.slug === params.slug
//   );

//   return {
//     props: {
//       post,
//     },
//   };
// }

export async function getStaticPaths() {
  const allPosts = await getCollection('blog');
  const formattedPosts = formatBlogPosts(allPosts);

  return formattedPosts.map((post: { slug: any }) => ({
    params: { slug: post.slug },
    props: {
      post,
    },
  }));
}
interface Props {
  post: CollectionEntry<'blog'>;
}

const { post } = Astro.props;
console.log(post);
const { title, description } = post.data;

const { Content, remarkPluginFrontmatter } = await post.render();
---

<BlogLayout
  title={title}
  description={description}
  data={remarkPluginFrontmatter}
>
  <Content />
</BlogLayout>
